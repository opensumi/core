name: CI

# Cancel prev CI if new commit come
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - v*.*
  pull_request:
    branches:
      - main
      - v*.*
    paths:
      - 'packages/**'
      - package.json
      - yarn.lock

jobs:
  unittest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        node-version: [18.x]
        ci-project: [node, jsdom]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn_cache_dir_path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: yarn_cache
        with:
          path: ${{ steps.yarn_cache_dir_path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('./yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        run: |
          yarn install --immutable
          yarn constraints

      - name: CI
        run: |
          yarn run ci --selectProjects ${{ matrix.ci-project }}

      - if: ${{ matrix.os == 'ubuntu-latest' }}
        name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CORE_CODECOV_TOKEN }}
          flags: ${{ matrix.ci-project }}
          directory: ./coverage
