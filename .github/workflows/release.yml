# 适用于 OpenSumi core 仓库的正式版本发布流程

name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version you want to release, eg: 1.0.0"
        required: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://registry.npmjs.org"

      - uses: mukunku/tag-exists-action@v1.0.0
        id: checkTag
        env:
          TAG: v${{github.event.inputs.version}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git Identity
        if: steps.checkTag.outputs.exists == 'false'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 安装依赖并构建
      - name: Install dependencies & Build
        if: steps.checkTag.outputs.exists == 'false'
        run: |
          npm i
          npm run init

      # 生成 Changelog, 会将内容写入到 ./releaselog.md 中
      - name: Create release log
        if: steps.checkTag.outputs.exists == 'false'
        id: release-log
        run: |
          npm run changelog -- --remote
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 发布正式版本
      - name: Publish prod version
        if: steps.checkTag.outputs.exists == 'false'
        run: |
          lerna publish --exact ${{github.event.inputs.version}} --dist-tag latest --force-publish='*' --ignore-prepublish --ignore-scripts --no-private -y
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git Tag
        if: steps.checkTag.outputs.exists == 'false'
        uses: pkgdeps/git-tag-action@v2
        with:
          version: v${{ github.event.inputs.version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_repo: ${{ github.repository }}
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: "v"

      - name: Create Release
        id: create_release
        if: steps.checkTag.outputs.exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: OpenSumi Release v${{ github.event.inputs.version }}
          body_path: ./releaselog.md
          draft: false
          prerelease: false

      - name: Create and push release branch
        if: github.event.ref == 'refs/heads/main'
        run: |
          git checkout -b v${{ github.event.inputs.version }}
          git push origin v${{ github.event.inputs.version }}

      - name: Create pull request
        if: github.event.ref == 'refs/heads/main'
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update v${{ github.event.inputs.version }}"
          committer: GitHub <noreply@github.com>
          author: "${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>"
          title: 'chore: v${{ github.event.inputs.version }}'
          labels: "release"
          branch: v${{ github.event.inputs.version }}
          base: "main"
