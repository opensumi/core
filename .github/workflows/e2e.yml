name: E2E Test

on:
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request:
    branches:
      - main

# Cancel prev CI if new commit come
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # Prepare node modules. Reuse cache if available
  setup:
    name: setup
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Use Node.js "14.x"
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'

      - name: cache yarn.lock
        uses: actions/cache@v3
        with:
          path: .package-temp-dir
          key: lock-${{ github.sha }}
      - name: Get yarn cache directory path
        id: yarn_cache_dir_path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v3
        id: yarn_cache
        with:
          path: ${{ steps.yarn_cache_dir_path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: create yarn.lock
        run: yarn install --mode update-lockfile

      - name: hack for single file
        run: |
          node ./scripts/actions/cache.js
  build:
    name: ubuntu-latest,  Node.js 14.x
    needs: setup

    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js "14.x"
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'

      - uses: microsoft/playwright-github-action@v1

      # region yarn cache start
      - name: restore cache from yarn.lock
        uses: actions/cache@v3
        with:
          path: .package-temp-dir
          key: lock-${{ github.sha }}
      - name: restore yarn.lock
        run: |
          node ./scripts/actions/restore-cache.js
      - name: Get yarn cache directory path
        id: yarn_cache_dir_path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v3
        id: yarn_cache
        with:
          path: ${{ steps.yarn_cache_dir_path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install
        run: yarn install
      #endregion

      - name: Init
        run: yarn run init

      - name: Run & Test
        run: |
          yarn run download-extension
          yarn run rebuild:node
          SUPPORT_LOAD_WORKSPACE_BY_HASH=true yarn start &
          bash tools/playwright/scripts/wait.sh && cd tools/playwright && yarn run ui-tests-ci

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: tools/playwright/test-results
